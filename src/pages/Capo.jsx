import { useMemo,useState } from 'react'; import dayjs from 'dayjs'; import { exportReportPDF } from '../lib/pdf.js'; import { getSuggestions } from '../lib/ai.js'; import UndoRedoBar from '../components/UndoRedoBar.jsx'; import { useToast } from '../components/Toasts.jsx'; function Row({item,onChange,onSuggest}){return(<tr className='border-b border-white/10'><td className='p-2'>{item.name}</td><td className='p-2'><div className='flex items-center gap-2'><input value={item.activity||''} onChange={e=>onChange({...item,activity:e.target.value})} placeholder='Attività…' className='bg-black/30 rounded px-2 py-1 text-sm w-full'/><button onClick={()=>onSuggest(item)} className='text-xs rounded bg-white/10 px-2 py-1 hover:bg-white/15'>Suggerisci</button></div>{item.suggestion&&<div className='text-xs text-core-violet mt-1'>Suggerito: {item.suggestion}</div>}</td><td className='p-2 w-32'><input type='number' min='0' max='16' value={item.hours} onChange={e=>onChange({...item,hours:Number(e.target.value)})} className='bg-black/30 rounded px-2 py-1 text-sm w-full'/>{item.hours>12&&<div className='text-xs text-core-warning mt-1'>Attenzione: più di 12 ore</div>}</td><td className='p-2'><input value={item.note||''} onChange={e=>onChange({...item,note:e.target.value})} className='bg-black/30 rounded px-2 py-1 text-sm w-full'/></td></tr>)} export default function Capo(){ const toast=useToast(); const [date]=useState(dayjs().format('YYYY-MM-DD')); const [status,setStatus]=useState('bozza'); const [locked,setLocked]=useState(false); const [rows,setRows]=useState([{id:1,name:'Operaio A',activity:'Cavi',hours:8,note:''},{id:2,name:'Operaio B',activity:'Lampade',hours:7,note:''}]); const total=useMemo(()=>rows.reduce((a,b)=>a+(b.hours||0),0),[rows]); function updateRow(n){ setRows(p=>p.map(r=>r.id===n.id?n:r)) } function duplicaIeri(){ toast.push({type:'info',message:'Duplica ieri (demo)'}); } function compilaPerTutti(){ const act=prompt('Attività per tutti?'); if(!act) return; setRows(p=>p.map(r=>({...r,activity:act}))); toast.push({type:'success',message:'Compilato per tutti'}) } async function esporta(){ await exportReportPDF({report:{day:date,status},rows}); toast.push({type:'success',message:'Esportato'}) } async function suggest(item){ const res=await getSuggestions({type:'capo_row',context:{activity:item.activity,note:item.note}}); if(res?.suggestion){ updateRow({...item,suggestion:res.suggestion}) } else { toast.push({type:'info',message:'Nessun suggerimento'}) } } return (<main className='mx-auto max-w-6xl px-4 py-8'><UndoRedoBar onUndo={()=>{}} onRedo={()=>{}}/><div className='flex flex-wrap items-end justify-between gap-4'><div><h2 className='text-2xl font-semibold'>Rapportino — {date}</h2><p className='text-white/60 text-sm'>Inline edit, suggerimenti, controllo ore, stati.</p></div><div className='flex items-center gap-2'><select value={status} onChange={e=>setStatus(e.target.value)} className='bg-core-card rounded px-2 py-1 text-sm'><option value='bozza'>Bozza</option><option value='validato'>Validato</option><option value='inviato'>Inviato</option></select><button onClick={()=>setLocked(v=>!v)} className='rounded bg-white/10 px-3 py-2 text-sm hover:bg-white/15'>{locked?'Sblocca':'Blocca'}</button><button onClick={duplicaIeri} className='rounded bg-white/10 px-3 py-2 text-sm hover:bg-white/15'>Duplica ieri</button><button onClick={compilaPerTutti} className='rounded bg-white/10 px-3 py-2 text-sm hover:bg-white/15'>Compila per tutti</button><button onClick={esporta} className='rounded bg-core-violet px-3 py-2 text-sm'>Esporta PDF</button></div></div><div className='mt-6 overflow-x-auto rounded-2xl bg-core-card shadow-e2'><table className='w-full text-sm'><thead><tr className='text-left border-b border-white/10'><th className='p-2'>Operaio</th><th className='p-2'>Attività</th><th className='p-2'>Ore</th><th className='p-2'>Note</th></tr></thead><tbody>{rows.map(r=><Row key={r.id} item={r} onChange={updateRow} onSuggest={suggest}/>)}</tbody></table></div><div className='mt-4 text-sm text-white/70'>Totale ore: {total}</div>{locked&&<div className='mt-2 text-xs text-yellow-300'>Settimana bloccata</div>}</main>) }
